{"version":3,"sources":["components/HomePage/HomePage.jsx","components/PersonName/PersonName.jsx","components/PersonRow/PersonRow.jsx","components/PeopleTable/PeopleTable.jsx","components/PeoplePage/PeoplePage.jsx","api/api.js","components/NotFoundPage/NotFoundPage.jsx","App.jsx","index.js"],"names":["HomePage","PersonName","name","slug","sex","to","className","classNames","man","woman","PersonRow","person","people","sortByParam","useParams","Person","selected","td","sorted","born","died","some","parent","motherName","find","fatherName","defaultProps","PeopleTable","handleSort","th","onClick","map","key","PeoplePage","useState","setPeople","history","useHistory","location","useLocation","searchParams","URLSearchParams","search","get","query","useEffect","fetch","then","result","json","mother","item","father","filteredPeople","useMemo","filtered","filter","p","toLowerCase","includes","sort","a","b","localeCompare","type","value","onChange","event","set","target","push","toString","sortBy","NotFoundPage","App","activeClassName","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e8dd382e.chunk.js","sourcesContent":["import React from 'react';\n\nexport const HomePage = () => <h1>Home page</h1>;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport './PersonName.scss';\n\nexport const PersonName = ({ name, slug, sex }) => (\n  <Link\n    to={`/people/${slug}`}\n    className={classNames({\n      man: sex === 'm',\n      woman: sex === 'f',\n    })}\n  >\n    {name}\n  </Link>\n);\n\nPersonName.propTypes = {\n  name: PropTypes.string.isRequired,\n  slug: PropTypes.string.isRequired,\n  sex: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { PersonName } from '../PersonName';\nimport './PersonRow.scss';\n\nexport const PersonRow = ({ person, people, sortByParam }) => {\n  const { slug } = useParams();\n\n  return (\n    <tr className={classNames({\n      Person: true,\n      selected: slug === person.slug,\n    })}\n    >\n      <td className={classNames({\n        td: true,\n        sorted: sortByParam === 'name',\n      })}\n      >\n        <PersonName\n          name={person.name}\n          slug={person.slug}\n          sex={person.sex}\n        />\n      </td>\n      <td className={classNames({\n        td: true,\n        sorted: sortByParam === 'sex',\n      })}\n      >\n        {person.sex}\n      </td>\n      <td className={classNames({\n        td: true,\n        sorted: sortByParam === 'born',\n      })}\n      >\n        {person.born}\n      </td>\n      <td className={classNames({\n        td: true,\n        sorted: sortByParam === 'died',\n      })}\n      >\n        {person.died}\n      </td>\n      <td className=\"td\">\n        {(people.some(parent => parent.name === person.motherName)\n          ? (\n            <>\n              <PersonName\n                name={person.motherName}\n                slug={people.find(parent => parent.name === person.motherName)\n                  .slug}\n                sex={people.find(parent => parent.name === person.motherName)\n                  .sex}\n              />\n            </>\n          )\n          : <>{person.motherName}</>\n        )}\n      </td>\n      <td className=\"td\">\n        {(people.some(parent => parent.name === person.fatherName)\n          ? (\n            <>\n              <PersonName\n                name={person.fatherName}\n                slug={people.find(parent => parent.name === person.fatherName)\n                  .slug}\n                sex={people.find(parent => parent.name === person.fatherName)\n                  .sex}\n              />\n            </>\n          )\n          : <>{person.fatherName}</>\n        )}\n      </td>\n    </tr>\n  );\n};\n\nPersonRow.propTypes = {\n  person: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    sex: PropTypes.string.isRequired,\n    born: PropTypes.number.isRequired,\n    died: PropTypes.number.isRequired,\n    motherName: PropTypes.string,\n    fatherName: PropTypes.string,\n    slug: PropTypes.string.isRequired,\n  }).isRequired,\n  people: PropTypes.arrayOf(PropTypes.object),\n  sortByParam: PropTypes.string.isRequired,\n};\n\nPersonRow.defaultProps = {\n  people: null,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { PersonRow } from '../PersonRow';\nimport './PeopleTable.scss';\n\nexport const PeopleTable = ({ people, handleSort, sortByParam }) => (\n  <table className=\"PeopleTable\">\n    <thead>\n      <tr>\n        <th\n          className={classNames({\n            th: true, selected: sortByParam === 'name',\n          })}\n          onClick={() => handleSort('name')}\n        >\n          Name\n        </th>\n        <th\n          className={classNames({\n            th: true, selected: sortByParam === 'sex',\n          })}\n          onClick={() => handleSort('sex')}\n        >\n          Sex\n        </th>\n        <th\n          onClick={() => handleSort('born')}\n          className={classNames({\n            th: true, selected: sortByParam === 'born',\n          })}\n        >\n          Born\n        </th>\n        <th\n          onClick={() => handleSort('died')}\n          className={classNames({\n            th: true, selected: sortByParam === 'died',\n          })}\n        >\n          Died\n        </th>\n        <th>Mother</th>\n        <th>Father</th>\n      </tr>\n    </thead>\n    <tbody>\n      {people.map(person => (\n        <PersonRow\n          person={person}\n          key={person.name}\n          people={people}\n          sortByParam={sortByParam}\n        />\n      ))}\n    </tbody>\n  </table>\n);\n\nPeopleTable.propTypes = {\n  people: PropTypes.arrayOf(PropTypes.object),\n  handleSort: PropTypes.func.isRequired,\n  sortByParam: PropTypes.string.isRequired,\n};\n\nPeopleTable.defaultProps = {\n  people: [],\n};\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { getPeople } from '../../api/api';\nimport { PeopleTable } from '../PeopleTable';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState([]);\n  const history = useHistory();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const sortByParam = searchParams.get('sortBy') || '';\n  const query = searchParams.get('query') || '';\n\n  useEffect(() => {\n    getPeople()\n      .then(result => setPeople(result\n        .map(person => (\n          {\n            ...person,\n            mother: result.find(item => item.name === person.motherName),\n            father: result.find(item => item.name === person.fatherName),\n          }\n        ))));\n  }, []);\n\n  const filteredPeople = useMemo(() => {\n    const filtered = people.filter(p => p.name.toLowerCase()\n      .includes(query.toLowerCase())\n    || (p.motherName && p.motherName.toLowerCase()\n      .includes(query.toLowerCase()))\n    || (p.fatherName && p.fatherName.toLowerCase()\n      .includes(query.toLowerCase())));\n\n    switch (sortByParam) {\n      case 'born':\n        return filtered.sort((a, b) => a.born - b.born);\n\n      case 'died':\n        return filtered.sort((a, b) => a.died - b.died);\n\n      case 'sex':\n        return filtered.sort((a, b) => a.sex.localeCompare(b.sex));\n\n      case 'name':\n        return filtered.sort((a, b) => a.name.localeCompare(b.name));\n\n      default:\n        return filtered;\n    }\n  }, [people, query, sortByParam]);\n\n  // eslint-disable-next-line consistent-return\n  const sortPeople = (sortBy) => {\n    switch (sortBy) {\n      case 'born':\n      case 'died':\n      case 'sex':\n      case 'name':\n        searchParams.set('sortBy', `${sortBy}`);\n        history.push({\n          search: searchParams.toString(),\n        });\n        break;\n\n      default: return null;\n    }\n  };\n\n  return (\n    <>\n      <label>\n        {`Search person `}\n        <input\n          type=\"text\"\n          value={query}\n          onChange={(event) => {\n            searchParams.set('query', event.target.value);\n            history.push({\n              search: searchParams.toString(),\n            });\n          }}\n        />\n      </label>\n      <PeopleTable\n        people={filteredPeople}\n        handleSort={sortPeople}\n        sortByParam={sortByParam}\n      />\n    </>\n  );\n};\n","const BASE_URL = 'https://mate-academy.github.io';\n\nexport function getPeople() {\n  return fetch(`${BASE_URL}/react_people-table/api/people.json`)\n    .then(result => result.json());\n}\n","import React from 'react';\n\nexport const NotFoundPage = () => (\n  <h1>Page not found</h1>\n);\n","import React from 'react';\nimport { Route, NavLink, Switch, Redirect } from 'react-router-dom';\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport './App.scss';\n\nconst App = () => (\n  <div className=\"App\">\n    <nav className=\"nav\">\n      <NavLink\n        to=\"/\"\n        activeClassName=\"active\"\n        className=\"nav__link\"\n      >\n        Home\n      </NavLink>\n      <NavLink\n        to=\"/people\"\n        activeClassName=\"active\"\n        className=\"nav__link\"\n      >\n        People\n      </NavLink>\n    </nav>\n    <Switch>\n      <Route path=\"/\" exact component={HomePage} />\n      <Route\n        path=\"/people/:slug?\"\n        component={PeoplePage}\n      />\n      <Route path=\"/home\" exact>\n        <Redirect to=\"/\" />\n      </Route>\n      <Route path=\"*\" component={NotFoundPage} />\n    </Switch>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}